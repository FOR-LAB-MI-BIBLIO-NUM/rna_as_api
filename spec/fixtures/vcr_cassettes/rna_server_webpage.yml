---
http_interactions:
- request:
    method: head
    uri: https://www.data.gouv.fr/fr/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.data.gouv.fr
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Tue, 07 Aug 2018 12:35:24 GMT
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '92341'
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      - Accept-Encoding
      - Cookie
      Set-Cookie:
      - session=d1~eyJjc3JmX3Rva2VuIjp7IiBiIjoiTldZME1ESmhORGN4TURGaU56bGxOalkzTXpjek1EUTJOemt5Wm1RME1tUXhPV0l3WXpNMVpRPT0ifX0.DksjjA.jwrtJWaF1SgBfhJuDQpbSn_iHm0;
        Domain=.www.data.gouv.fr; HttpOnly; Path=/
      Pragma:
      - public
      Cache-Control:
      - public
      Strict-Transport-Security:
      - max-age=31536000
      Content-Security-Policy:
      - frame-ancestors *.data.gouv.fr;
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 07 Aug 2018 12:35:25 GMT
- request:
    method: get
    uri: https://www.data.gouv.fr/fr/datasets/repertoire-national-des-associations/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Tue, 07 Aug 2018 12:35:25 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      - Accept-Encoding
      - Cookie
      Set-Cookie:
      - session=d1~eyJjc3JmX3Rva2VuIjp7IiBiIjoiWm1Fd01HTXdPVGxsTURJM01qTTFOREppT1RNNVpXSmtZelF6T1dJMVl6STJNemxtTmpaak53PT0ifX0.DksjjQ.DHf85CmHmzrI1695eRIkVUXAO48;
        Domain=.www.data.gouv.fr; HttpOnly; Path=/
      Pragma:
      - public
      Cache-Control:
      - public
      Strict-Transport-Security:
      - max-age=31536000
      Content-Security-Policy:
      - frame-ancestors *.data.gouv.fr;
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 07 Aug 2018 12:35:25 GMT
- request:
    method: get
    uri: https://www.data.gouv.fr/fr/datasets/r/dcdee477-56dc-4095-8017-3faed2ee10c0
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.data.gouv.fr
  response:
    status:
      code: 302
      message: FOUND
    headers:
      Server:
      - nginx
      Date:
      - Tue, 07 Aug 2018 12:35:26 GMT
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '325'
      Connection:
      - keep-alive
      Location:
      - https://media.interieur.gouv.fr/rna/rna_waldec_20180801.zip
      Pragma:
      - public
      Cache-Control:
      - public
      Strict-Transport-Security:
      - max-age=31536000
      Content-Security-Policy:
      - frame-ancestors *.data.gouv.fr;
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
    body:
      encoding: UTF-8
      string: |-
        <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
        <title>Redirecting...</title>
        <h1>Redirecting...</h1>
        <p>You should be redirected automatically to target URL: <a href="https://media.interieur.gouv.fr/rna/rna_waldec_20180801.zip">https://media.interieur.gouv.fr/rna/rna_waldec_20180801.zip</a>.  If not click the link.
    http_version: 
  recorded_at: Tue, 07 Aug 2018 12:35:26 GMT
- request:
    method: get
    uri: https://www.data.gouv.fr/fr/datasets/r/90fd1abb-1fbf-4e65-83be-a2177cb20e0f
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - www.data.gouv.fr
  response:
    status:
      code: 302
      message: FOUND
    headers:
      Server:
      - nginx
      Date:
      - Tue, 07 Aug 2018 12:35:26 GMT
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '325'
      Connection:
      - keep-alive
      Location:
      - https://media.interieur.gouv.fr/rna/rna_waldec_20180801.zip
      Pragma:
      - public
      Cache-Control:
      - public
      Strict-Transport-Security:
      - max-age=31536000
      Content-Security-Policy:
      - frame-ancestors *.data.gouv.fr;
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
    body:
      encoding: UTF-8
      string: |-
        <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
        <title>Redirecting...</title>
        <h1>Redirecting...</h1>
        <p>You should be redirected automatically to target URL: <a href="https://media.interieur.gouv.fr/rna/rna_waldec_20180801.zip">https://media.interieur.gouv.fr/rna/rna_waldec_20180801.zip</a>.  If not click the link.
    http_version: 
  recorded_at: Tue, 07 Aug 2018 12:35:26 GMT
- request:
    method: head
    uri: https://media.interieur.gouv.fr/rna/rna_waldec_20180801.zip
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - media.interieur.gouv.fr
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '324698927'
      Content-Type:
      - application/zip
      Etag:
      - '"a6470dfc0c18a361-135a832f-5726def077f41"'
      Last-Modified:
      - Thu, 02 Aug 2018 06:29:30 GMT
      Server:
      - Footprint Distributor V6.1.715
      Vary:
      - x-protocol
      Strict-Transport-Security:
      - max-age=15552001; includeSubDomains; preload,max-age=15552001; includeSubDomains;
        preload
      X-Cdn:
      - Incapsula
      X-Content-Type-Options:
      - nosniff
      X-Iinfo:
      - 10-203384278-203384323 NNNN CT(150 150 0) RT(1533298723245 299) q(0 0 3 0)
        r(4 4) U5
      X-Xss-Protection:
      - 1;mode=block
      Date:
      - Tue, 07 Aug 2018 12:35:26 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 07 Aug 2018 12:35:26 GMT
- request:
    method: head
    uri: https://media.interieur.gouv.fr/rna/rna_waldec_20180801.zip
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - media.interieur.gouv.fr
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Length:
      - '324698927'
      Content-Type:
      - application/zip
      Etag:
      - '"a6470dfc0c18a361-135a832f-5726def077f41"'
      Last-Modified:
      - Thu, 02 Aug 2018 06:29:30 GMT
      Server:
      - Footprint Distributor V6.1.715
      Vary:
      - x-protocol
      Strict-Transport-Security:
      - max-age=15552001; includeSubDomains; preload,max-age=15552001; includeSubDomains;
        preload
      X-Cdn:
      - Incapsula
      X-Content-Type-Options:
      - nosniff
      X-Iinfo:
      - 10-203384278-203384323 NNNN CT(150 150 0) RT(1533298723245 299) q(0 0 3 0)
        r(4 4) U5
      X-Xss-Protection:
      - 1;mode=block
      Date:
      - Tue, 07 Aug 2018 12:35:27 GMT
      Connection:
      - close
    body:
      encoding: UTF-8
      string: ''
    http_version: 
  recorded_at: Tue, 07 Aug 2018 12:35:27 GMT
recorded_with: VCR 4.0.0
